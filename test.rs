use ::libc;
use crate::transform::qcms_transform;
use crate::iccread::qcms_profile;
extern "C" {
    #[no_mangle]
    fn abort() -> !;
    #[no_mangle]
    fn printf(_: *const libc::c_char, _: ...) -> i32;
    #[no_mangle]
    fn qcms_transform_release(_: *mut qcms_transform);
    #[no_mangle]
    fn qcms_profile_from_path(path: *const libc::c_char) -> *mut qcms_profile;
    #[no_mangle]
    fn qcms_profile_release(profile: *mut qcms_profile);
    #[no_mangle]
    fn qcms_transform_create(in_0: *mut qcms_profile, in_type: qcms_data_type,
                             out: *mut qcms_profile, out_type: qcms_data_type,
                             intent: qcms_intent) -> *mut qcms_transform;
    #[no_mangle]
    fn qcms_transform_data(transform: *mut qcms_transform,
                           src: *const libc::c_void, dest: *mut libc::c_void,
                           length: size_t);
    #[no_mangle]
    fn memcpy(_: *mut libc::c_void, _: *const libc::c_void, _: libc::c_ulong)
     -> *mut libc::c_void;
    #[no_mangle]
    fn memset(_: *mut libc::c_void, _: i32, _: libc::c_ulong)
     -> *mut libc::c_void;
}
pub type __darwin_size_t = libc::c_ulong;
pub type size_t = __darwin_size_t;
pub type uint8_t = libc::c_uchar;
pub type uint32_t = libc::c_uint;
pub type qcms_intent = libc::c_uint;
pub const QCMS_INTENT_DEFAULT: qcms_intent = 0;
pub const QCMS_INTENT_MAX: qcms_intent = 3;
pub const QCMS_INTENT_ABSOLUTE_COLORIMETRIC: qcms_intent = 3;
pub const QCMS_INTENT_SATURATION: qcms_intent = 2;
pub const QCMS_INTENT_RELATIVE_COLORIMETRIC: qcms_intent = 1;
pub const QCMS_INTENT_PERCEPTUAL: qcms_intent = 0;
pub const QCMS_INTENT_MIN: qcms_intent = 0;
pub type qcms_data_type = libc::c_uint;
pub const QCMS_DATA_GRAYA_8: qcms_data_type = 4;
pub const QCMS_DATA_GRAY_8: qcms_data_type = 3;
pub const QCMS_DATA_BGRA_8: qcms_data_type = 2;
pub const QCMS_DATA_RGBA_8: qcms_data_type = 1;
pub const QCMS_DATA_RGB_8: qcms_data_type = 0;
/*
SHA-1 in C
By Steve Reid <sreid@sea-to-sky.net>
100% Public Domain

-----------------
Modified 7/98 
By James H. Brown <jbrown@burgoyne.com>
Still 100% Public Domain

Corrected a problem which generated improper hash values on 16 bit machines
Routine SHA1Update changed from
	void SHA1Update(SHA1_CTX* context, unsigned char* data, unsigned int
len)
to
	void SHA1Update(SHA1_CTX* context, unsigned char* data, unsigned
long len)

The 'len' parameter was declared an int which works fine on 32 bit machines.
However, on 16 bit machines an int is too small for the shifts being done
against
it.  This caused the hash function to generate incorrect values if len was
greater than 8191 (8K - 1) due to the 'len << 3' on line 3 of SHA1Update().

Since the file IO in main() reads 16K at a time, any file 8K or larger would
be guaranteed to generate the wrong hash (e.g. Test Vector #3, a million
"a"s).

I also changed the declaration of variables i & j in SHA1Update to 
unsigned long from unsigned int for the same reason.

These changes should make no difference to any 32 bit implementations since
an
int and a long are the same size in those environments.

--
I also corrected a few compiler warnings generated by Borland C.
1. Added #include <process.h> for exit() prototype
2. Removed unused variable 'j' in SHA1Final
3. Changed exit(0) to return(0) at end of main.

ALL changes I made can be located by searching for comments containing 'JHB'
-----------------
Modified 8/98
By Steve Reid <sreid@sea-to-sky.net>
Still 100% public domain

1- Removed #include <process.h> and used return() instead of exit()
2- Fixed overwriting of finalcount in SHA1Final() (discovered by Chris Hall)
3- Changed email address from steve@edmweb.com to sreid@sea-to-sky.net

-----------------
Modified 4/01
By Saul Kravitz <Saul.Kravitz@celera.com>
Still 100% PD
Modified to run on Compaq Alpha hardware.  

-----------------
Modified 07/2002
By Ralph Giles <giles@artofcode.com>
Still 100% public domain
modified for use with stdint types, autoconf
code cleanup, removed attribution comments
switched SHA1Final() argument order for consistency
use SHA1_ prefix for public api
move public api to sha1.h
*/
/*
Test Vectors (from FIPS PUB 180-1)
"abc"
  A9993E36 4706816A BA3E2571 7850C26C 9CD0D89D
"abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"
  84983E44 1C3BD26E BAAE4AA1 F95129E5 E54670F1
A million repetitions of "a"
  34AA973C D4C4DAA4 F61EEB2B DBAD2731 6534016F
*/
/* public api for steve reid's public domain SHA-1 implementation */
/* this file is in the public domain */

#[repr(C)]#[derive(Copy, Clone)]
pub struct SHA1_CTX {
    pub state: [u32; 5],
    pub count: [u32; 2],
    pub buffer: [u8; 64],
}

#[repr(C)]#[derive(Copy, Clone)]
pub union CHAR64LONG16 {
    pub c: [u8; 64],
    pub l: [u32; 16],
}
/* __SHA1_H */
//#include "os_types.h"
//#include "sha1.h"
/* blk0() and blk() perform the initial expand. */
/* I got the idea of expanding during the round function from SSLeay */
/* FIXME: can we do this in an endian-proof way? */
/* (R0+R1), R2, R3, R4 are the different operations used in SHA1 */
/* SAK */
/* VERBOSE */
/* Hash a single 512-bit block. This is the core of the algorithm. */
/* Copy context->state[] to working vars */
/* 4 rounds of 20 operations each. Loop unrolled. */
/* Add the working vars back into context.state[] */
/* Wipe variables */
/* SHA1Init - Initialize new context */
unsafe extern "C" fn SHA1_Init(mut context: *mut SHA1_CTX) {
    /* SHA1 initialization constants */
    (*context).state[0usize] =
        0x67452301u32;
    (*context).state[1usize] = 0xefcdab89u32;
    (*context).state[2usize] = 0x98badcfeu32;
    (*context).state[3usize] =
        0x10325476u32;
    (*context).state[4usize] = 0xc3d2e1f0u32;
    (*context).count[1usize] =
        0u32;
    (*context).count[0usize] =
        (*context).count[1usize];
}
/* Run your data through this. */
unsafe extern "C" fn SHA1_Update(mut context: *mut SHA1_CTX,
                                 mut data: *const u8, len: size_t) {
    let mut i: size_t = 0;
    
     let mut j:  size_t = 
        ((*context).count[0usize] >> 3i32 &
             63u32) as size_t;
    (*context).count[0usize] =
        
        ((*context).count[0usize] as
             libc::c_ulong).wrapping_add(len << 3i32)
            as u32;
    if ((*context).count[0usize] as libc::c_ulong) <
           len << 3i32 {
        (*context).count[1usize] =
            (*context).count[1usize].wrapping_add(1)
    }
    (*context).count[1usize] =
        
        ((*context).count[1usize] as
             libc::c_ulong).wrapping_add(len >> 29i32)
            as u32;
    if j.wrapping_add(len) > 63 {
        i = (64 as size_t).wrapping_sub(j);
        memcpy(&mut *(*context).buffer.as_mut_ptr().offset(j as isize) as
                   *mut u8 as *mut libc::c_void,
               data as *const libc::c_void, i);
        SHA1_Transform((*context).state.as_mut_ptr(),
                       (*context).buffer.as_mut_ptr() as *const u8);
        while i.wrapping_add(63) < len {
            SHA1_Transform((*context).state.as_mut_ptr(),
                           data.offset(i as isize));
            i =
                
                (i).wrapping_add(64)
        }
        j = 0
    } else { i = 0 }
    memcpy(&mut *(*context).buffer.as_mut_ptr().offset(j as isize) as
               *mut u8 as *mut libc::c_void,
           &*data.offset(i as isize) as *const u8 as *const libc::c_void,
           len.wrapping_sub(i));
}
unsafe extern "C" fn SHA1_Transform(mut state: *mut u32,
                                    mut buffer: *const u8) {
    
    
    
    
    
    
    static mut workspace: [u8; 64] = [0; 64];
     let mut block:  *mut CHAR64LONG16 =
     workspace.as_mut_ptr() as *mut CHAR64LONG16;
    memcpy(block as *mut libc::c_void, buffer as *const libc::c_void,
           64);
    
    
    
    
     let mut a:  u32 =  *state.offset(0isize); let mut b:  u32 =  *state.offset(1isize); let mut c:  u32 =  *state.offset(2isize); let mut d:  u32 =  *state.offset(3isize); let mut e:  u32 =  *state.offset(4isize);
    (*block).l[0usize] =
        ((*block).l[0usize] << 24i32 |
             (*block).l[0usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[0usize] << 8i32 |
                 (*block).l[0usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    e =
        
        (e).wrapping_add((b & (c ^ d) ^
                                             d).wrapping_add((*block).l[0usize]).wrapping_add(0x5a827999u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[1usize] =
        ((*block).l[1usize] << 24i32 |
             (*block).l[1usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[1usize] << 8i32 |
                 (*block).l[1usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    d =
        
        (d).wrapping_add((a & (b ^ c) ^
                                             c).wrapping_add((*block).l[1usize]).wrapping_add(0x5a827999u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[2usize] =
        ((*block).l[2usize] << 24i32 |
             (*block).l[2usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[2usize] << 8i32 |
                 (*block).l[2usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    c =
        
        (c).wrapping_add((e & (a ^ b) ^
                                             b).wrapping_add((*block).l[2usize]).wrapping_add(0x5a827999u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[3usize] =
        ((*block).l[3usize] << 24i32 |
             (*block).l[3usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[3usize] << 8i32 |
                 (*block).l[3usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    b =
        
        (b).wrapping_add((d & (e ^ a) ^
                                             a).wrapping_add((*block).l[3usize]).wrapping_add(0x5a827999u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[4usize] =
        ((*block).l[4usize] << 24i32 |
             (*block).l[4usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[4usize] << 8i32 |
                 (*block).l[4usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    a =
        
        (a).wrapping_add((c & (d ^ e) ^
                                             e).wrapping_add((*block).l[4usize]).wrapping_add(0x5a827999u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[5usize] =
        ((*block).l[5usize] << 24i32 |
             (*block).l[5usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[5usize] << 8i32 |
                 (*block).l[5usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    e =
        
        (e).wrapping_add((b & (c ^ d) ^
                                             d).wrapping_add((*block).l[5usize]).wrapping_add(0x5a827999u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[6usize] =
        ((*block).l[6usize] << 24i32 |
             (*block).l[6usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[6usize] << 8i32 |
                 (*block).l[6usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    d =
        
        (d).wrapping_add((a & (b ^ c) ^
                                             c).wrapping_add((*block).l[6usize]).wrapping_add(0x5a827999u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[7usize] =
        ((*block).l[7usize] << 24i32 |
             (*block).l[7usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[7usize] << 8i32 |
                 (*block).l[7usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    c =
        
        (c).wrapping_add((e & (a ^ b) ^
                                             b).wrapping_add((*block).l[7usize]).wrapping_add(0x5a827999u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[8usize] =
        ((*block).l[8usize] << 24i32 |
             (*block).l[8usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[8usize] << 8i32 |
                 (*block).l[8usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    b =
        
        (b).wrapping_add((d & (e ^ a) ^
                                             a).wrapping_add((*block).l[8usize]).wrapping_add(0x5a827999u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[9usize] =
        ((*block).l[9usize] << 24i32 |
             (*block).l[9usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[9usize] << 8i32 |
                 (*block).l[9usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    a =
        
        (a).wrapping_add((c & (d ^ e) ^
                                             e).wrapping_add((*block).l[9usize]).wrapping_add(0x5a827999u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[10usize] =
        ((*block).l[10usize] << 24i32 |
             (*block).l[10usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[10usize] << 8i32 |
                 (*block).l[10usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    e =
        
        (e).wrapping_add((b & (c ^ d) ^
                                             d).wrapping_add((*block).l[10usize]).wrapping_add(0x5a827999u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[11usize] =
        ((*block).l[11usize] << 24i32 |
             (*block).l[11usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[11usize] << 8i32 |
                 (*block).l[11usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    d =
        
        (d).wrapping_add((a & (b ^ c) ^
                                             c).wrapping_add((*block).l[11usize]).wrapping_add(0x5a827999u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[12usize] =
        ((*block).l[12usize] << 24i32 |
             (*block).l[12usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[12usize] << 8i32 |
                 (*block).l[12usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    c =
        
        (c).wrapping_add((e & (a ^ b) ^
                                             b).wrapping_add((*block).l[12usize]).wrapping_add(0x5a827999u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[13usize] =
        ((*block).l[13usize] << 24i32 |
             (*block).l[13usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[13usize] << 8i32 |
                 (*block).l[13usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    b =
        
        (b).wrapping_add((d & (e ^ a) ^
                                             a).wrapping_add((*block).l[13usize]).wrapping_add(0x5a827999u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[14usize] =
        ((*block).l[14usize] << 24i32 |
             (*block).l[14usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[14usize] << 8i32 |
                 (*block).l[14usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    a =
        
        (a).wrapping_add((c & (d ^ e) ^
                                             e).wrapping_add((*block).l[14usize]).wrapping_add(0x5a827999u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[15usize] =
        ((*block).l[15usize] << 24i32 |
             (*block).l[15usize] >>
                 32i32 - 24i32) &
            0xff00ff00u32 |
            ((*block).l[15usize] << 8i32 |
                 (*block).l[15usize] >>
                     32i32 - 8i32) &
                0xff00ffu32;
    e =
        
        (e).wrapping_add((b & (c ^ d) ^
                                             d).wrapping_add((*block).l[15usize]).wrapping_add(0x5a827999u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(16i32 & 15i32) as usize] =
        ((*block).l[(16i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(16i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(16i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(16i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(16i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(16i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(16i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(16i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add((a & (b ^ c) ^
                                             c).wrapping_add((*block).l[(16i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x5a827999u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(17i32 & 15i32) as usize] =
        ((*block).l[(17i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(17i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(17i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(17i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(17i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(17i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(17i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(17i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add((e & (a ^ b) ^
                                             b).wrapping_add((*block).l[(17i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x5a827999u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(18i32 & 15i32) as usize] =
        ((*block).l[(18i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(18i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(18i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(18i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(18i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(18i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(18i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(18i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add((d & (e ^ a) ^
                                             a).wrapping_add((*block).l[(18i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x5a827999u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(19i32 & 15i32) as usize] =
        ((*block).l[(19i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(19i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(19i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(19i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(19i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(19i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(19i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(19i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add((c & (d ^ e) ^
                                             e).wrapping_add((*block).l[(19i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x5a827999u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(20i32 & 15i32) as usize] =
        ((*block).l[(20i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(20i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(20i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(20i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(20i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(20i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(20i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(20i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add((b ^ c ^
                                             d).wrapping_add((*block).l[(20i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(21i32 & 15i32) as usize] =
        ((*block).l[(21i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(21i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(21i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(21i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(21i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(21i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(21i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(21i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add((a ^ b ^
                                             c).wrapping_add((*block).l[(21i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(22i32 & 15i32) as usize] =
        ((*block).l[(22i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(22i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(22i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(22i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(22i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(22i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(22i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(22i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add((e ^ a ^
                                             b).wrapping_add((*block).l[(22i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(23i32 & 15i32) as usize] =
        ((*block).l[(23i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(23i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(23i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(23i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(23i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(23i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(23i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(23i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add((d ^ e ^
                                             a).wrapping_add((*block).l[(23i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(24i32 & 15i32) as usize] =
        ((*block).l[(24i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(24i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(24i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(24i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(24i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(24i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(24i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(24i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add((c ^ d ^
                                             e).wrapping_add((*block).l[(24i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(25i32 & 15i32) as usize] =
        ((*block).l[(25i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(25i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(25i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(25i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(25i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(25i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(25i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(25i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add((b ^ c ^
                                             d).wrapping_add((*block).l[(25i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(26i32 & 15i32) as usize] =
        ((*block).l[(26i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(26i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(26i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(26i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(26i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(26i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(26i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(26i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add((a ^ b ^
                                             c).wrapping_add((*block).l[(26i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(27i32 & 15i32) as usize] =
        ((*block).l[(27i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(27i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(27i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(27i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(27i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(27i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(27i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(27i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add((e ^ a ^
                                             b).wrapping_add((*block).l[(27i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(28i32 & 15i32) as usize] =
        ((*block).l[(28i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(28i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(28i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(28i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(28i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(28i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(28i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(28i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add((d ^ e ^
                                             a).wrapping_add((*block).l[(28i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(29i32 & 15i32) as usize] =
        ((*block).l[(29i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(29i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(29i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(29i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(29i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(29i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(29i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(29i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add((c ^ d ^
                                             e).wrapping_add((*block).l[(29i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(30i32 & 15i32) as usize] =
        ((*block).l[(30i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(30i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(30i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(30i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(30i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(30i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(30i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(30i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add((b ^ c ^
                                             d).wrapping_add((*block).l[(30i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(31i32 & 15i32) as usize] =
        ((*block).l[(31i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(31i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(31i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(31i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(31i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(31i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(31i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(31i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add((a ^ b ^
                                             c).wrapping_add((*block).l[(31i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(32i32 & 15i32) as usize] =
        ((*block).l[(32i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(32i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(32i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(32i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(32i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(32i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(32i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(32i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add((e ^ a ^
                                             b).wrapping_add((*block).l[(32i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(33i32 & 15i32) as usize] =
        ((*block).l[(33i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(33i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(33i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(33i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(33i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(33i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(33i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(33i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add((d ^ e ^
                                             a).wrapping_add((*block).l[(33i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(34i32 & 15i32) as usize] =
        ((*block).l[(34i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(34i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(34i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(34i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(34i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(34i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(34i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(34i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add((c ^ d ^
                                             e).wrapping_add((*block).l[(34i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(35i32 & 15i32) as usize] =
        ((*block).l[(35i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(35i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(35i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(35i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(35i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(35i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(35i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(35i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add((b ^ c ^
                                             d).wrapping_add((*block).l[(35i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(36i32 & 15i32) as usize] =
        ((*block).l[(36i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(36i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(36i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(36i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(36i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(36i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(36i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(36i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add((a ^ b ^
                                             c).wrapping_add((*block).l[(36i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(37i32 & 15i32) as usize] =
        ((*block).l[(37i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(37i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(37i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(37i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(37i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(37i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(37i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(37i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add((e ^ a ^
                                             b).wrapping_add((*block).l[(37i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(38i32 & 15i32) as usize] =
        ((*block).l[(38i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(38i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(38i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(38i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(38i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(38i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(38i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(38i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add((d ^ e ^
                                             a).wrapping_add((*block).l[(38i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(39i32 & 15i32) as usize] =
        ((*block).l[(39i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(39i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(39i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(39i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(39i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(39i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(39i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(39i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add((c ^ d ^
                                             e).wrapping_add((*block).l[(39i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0x6ed9eba1u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(40i32 & 15i32) as usize] =
        ((*block).l[(40i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(40i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(40i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(40i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(40i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(40i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(40i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(40i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add(((b | c) & d |
                                             b &
                                                 c).wrapping_add((*block).l[(40i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(a
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        a
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(41i32 & 15i32) as usize] =
        ((*block).l[(41i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(41i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(41i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(41i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(41i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(41i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(41i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(41i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add(((a | b) & c |
                                             a &
                                                 b).wrapping_add((*block).l[(41i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(e
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        e
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(42i32 & 15i32) as usize] =
        ((*block).l[(42i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(42i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(42i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(42i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(42i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(42i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(42i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(42i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add(((e | a) & b |
                                             e &
                                                 a).wrapping_add((*block).l[(42i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(d
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        d
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(43i32 & 15i32) as usize] =
        ((*block).l[(43i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(43i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(43i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(43i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(43i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(43i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(43i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(43i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add(((d | e) & a |
                                             d &
                                                 e).wrapping_add((*block).l[(43i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(c
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        c
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(44i32 & 15i32) as usize] =
        ((*block).l[(44i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(44i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(44i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(44i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(44i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(44i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(44i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(44i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add(((c | d) & e |
                                             c &
                                                 d).wrapping_add((*block).l[(44i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(b
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        b
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(45i32 & 15i32) as usize] =
        ((*block).l[(45i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(45i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(45i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(45i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(45i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(45i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(45i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(45i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add(((b | c) & d |
                                             b &
                                                 c).wrapping_add((*block).l[(45i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(a
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        a
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(46i32 & 15i32) as usize] =
        ((*block).l[(46i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(46i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(46i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(46i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(46i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(46i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(46i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(46i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add(((a | b) & c |
                                             a &
                                                 b).wrapping_add((*block).l[(46i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(e
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        e
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(47i32 & 15i32) as usize] =
        ((*block).l[(47i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(47i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(47i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(47i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(47i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(47i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(47i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(47i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add(((e | a) & b |
                                             e &
                                                 a).wrapping_add((*block).l[(47i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(d
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        d
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(48i32 & 15i32) as usize] =
        ((*block).l[(48i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(48i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(48i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(48i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(48i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(48i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(48i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(48i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add(((d | e) & a |
                                             d &
                                                 e).wrapping_add((*block).l[(48i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(c
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        c
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(49i32 & 15i32) as usize] =
        ((*block).l[(49i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(49i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(49i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(49i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(49i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(49i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(49i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(49i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add(((c | d) & e |
                                             c &
                                                 d).wrapping_add((*block).l[(49i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(b
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        b
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(50i32 & 15i32) as usize] =
        ((*block).l[(50i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(50i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(50i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(50i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(50i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(50i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(50i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(50i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add(((b | c) & d |
                                             b &
                                                 c).wrapping_add((*block).l[(50i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(a
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        a
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(51i32 & 15i32) as usize] =
        ((*block).l[(51i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(51i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(51i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(51i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(51i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(51i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(51i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(51i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add(((a | b) & c |
                                             a &
                                                 b).wrapping_add((*block).l[(51i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(e
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        e
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(52i32 & 15i32) as usize] =
        ((*block).l[(52i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(52i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(52i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(52i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(52i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(52i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(52i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(52i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add(((e | a) & b |
                                             e &
                                                 a).wrapping_add((*block).l[(52i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(d
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        d
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(53i32 & 15i32) as usize] =
        ((*block).l[(53i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(53i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(53i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(53i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(53i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(53i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(53i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(53i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add(((d | e) & a |
                                             d &
                                                 e).wrapping_add((*block).l[(53i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(c
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        c
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(54i32 & 15i32) as usize] =
        ((*block).l[(54i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(54i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(54i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(54i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(54i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(54i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(54i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(54i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add(((c | d) & e |
                                             c &
                                                 d).wrapping_add((*block).l[(54i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(b
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        b
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(55i32 & 15i32) as usize] =
        ((*block).l[(55i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(55i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(55i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(55i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(55i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(55i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(55i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(55i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add(((b | c) & d |
                                             b &
                                                 c).wrapping_add((*block).l[(55i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(a
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        a
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(56i32 & 15i32) as usize] =
        ((*block).l[(56i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(56i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(56i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(56i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(56i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(56i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(56i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(56i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add(((a | b) & c |
                                             a &
                                                 b).wrapping_add((*block).l[(56i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(e
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        e
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(57i32 & 15i32) as usize] =
        ((*block).l[(57i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(57i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(57i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(57i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(57i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(57i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(57i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(57i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add(((e | a) & b |
                                             e &
                                                 a).wrapping_add((*block).l[(57i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(d
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        d
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(58i32 & 15i32) as usize] =
        ((*block).l[(58i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(58i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(58i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(58i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(58i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(58i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(58i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(58i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add(((d | e) & a |
                                             d &
                                                 e).wrapping_add((*block).l[(58i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(c
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        c
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(59i32 & 15i32) as usize] =
        ((*block).l[(59i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(59i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(59i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(59i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(59i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(59i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(59i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(59i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add(((c | d) & e |
                                             c &
                                                 d).wrapping_add((*block).l[(59i32
                                                                                 &
                                                                                 15i32)
                                                                                as
                                                                                usize]).wrapping_add(0x8f1bbcdcu32).wrapping_add(b
                                                                                                                                        <<
                                                                                                                                        5i32
                                                                                                                                        |
                                                                                                                                        b
                                                                                                                                            >>
                                                                                                                                            32i32
                                                                                                                                                -
                                                                                                                                                5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(60i32 & 15i32) as usize] =
        ((*block).l[(60i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(60i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(60i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(60i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(60i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(60i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(60i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(60i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add((b ^ c ^
                                             d).wrapping_add((*block).l[(60i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(61i32 & 15i32) as usize] =
        ((*block).l[(61i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(61i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(61i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(61i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(61i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(61i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(61i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(61i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add((a ^ b ^
                                             c).wrapping_add((*block).l[(61i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(62i32 & 15i32) as usize] =
        ((*block).l[(62i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(62i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(62i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(62i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(62i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(62i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(62i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(62i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add((e ^ a ^
                                             b).wrapping_add((*block).l[(62i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(63i32 & 15i32) as usize] =
        ((*block).l[(63i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(63i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(63i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(63i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(63i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(63i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(63i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(63i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add((d ^ e ^
                                             a).wrapping_add((*block).l[(63i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(64i32 & 15i32) as usize] =
        ((*block).l[(64i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(64i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(64i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(64i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(64i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(64i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(64i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(64i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add((c ^ d ^
                                             e).wrapping_add((*block).l[(64i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(65i32 & 15i32) as usize] =
        ((*block).l[(65i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(65i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(65i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(65i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(65i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(65i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(65i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(65i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add((b ^ c ^
                                             d).wrapping_add((*block).l[(65i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(66i32 & 15i32) as usize] =
        ((*block).l[(66i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(66i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(66i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(66i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(66i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(66i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(66i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(66i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add((a ^ b ^
                                             c).wrapping_add((*block).l[(66i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(67i32 & 15i32) as usize] =
        ((*block).l[(67i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(67i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(67i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(67i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(67i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(67i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(67i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(67i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add((e ^ a ^
                                             b).wrapping_add((*block).l[(67i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(68i32 & 15i32) as usize] =
        ((*block).l[(68i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(68i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(68i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(68i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(68i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(68i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(68i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(68i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add((d ^ e ^
                                             a).wrapping_add((*block).l[(68i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(69i32 & 15i32) as usize] =
        ((*block).l[(69i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(69i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(69i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(69i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(69i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(69i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(69i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(69i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add((c ^ d ^
                                             e).wrapping_add((*block).l[(69i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(70i32 & 15i32) as usize] =
        ((*block).l[(70i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(70i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(70i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(70i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(70i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(70i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(70i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(70i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add((b ^ c ^
                                             d).wrapping_add((*block).l[(70i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(71i32 & 15i32) as usize] =
        ((*block).l[(71i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(71i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(71i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(71i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(71i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(71i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(71i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(71i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add((a ^ b ^
                                             c).wrapping_add((*block).l[(71i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(72i32 & 15i32) as usize] =
        ((*block).l[(72i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(72i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(72i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(72i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(72i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(72i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(72i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(72i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add((e ^ a ^
                                             b).wrapping_add((*block).l[(72i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(73i32 & 15i32) as usize] =
        ((*block).l[(73i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(73i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(73i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(73i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(73i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(73i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(73i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(73i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add((d ^ e ^
                                             a).wrapping_add((*block).l[(73i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(74i32 & 15i32) as usize] =
        ((*block).l[(74i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(74i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(74i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(74i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(74i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(74i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(74i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(74i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add((c ^ d ^
                                             e).wrapping_add((*block).l[(74i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    (*block).l[(75i32 & 15i32) as usize] =
        ((*block).l[(75i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(75i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(75i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(75i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(75i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(75i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(75i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(75i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    e =
        
        (e).wrapping_add((b ^ c ^
                                             d).wrapping_add((*block).l[(75i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(a
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    a
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    b = b << 30i32 | b >> 32i32 - 30i32;
    (*block).l[(76i32 & 15i32) as usize] =
        ((*block).l[(76i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(76i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(76i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(76i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(76i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(76i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(76i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(76i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    d =
        
        (d).wrapping_add((a ^ b ^
                                             c).wrapping_add((*block).l[(76i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(e
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    e
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    a = a << 30i32 | a >> 32i32 - 30i32;
    (*block).l[(77i32 & 15i32) as usize] =
        ((*block).l[(77i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(77i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(77i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(77i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(77i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(77i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(77i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(77i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    c =
        
        (c).wrapping_add((e ^ a ^
                                             b).wrapping_add((*block).l[(77i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(d
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    d
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    e = e << 30i32 | e >> 32i32 - 30i32;
    (*block).l[(78i32 & 15i32) as usize] =
        ((*block).l[(78i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(78i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(78i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(78i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(78i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(78i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(78i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(78i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    b =
        
        (b).wrapping_add((d ^ e ^
                                             a).wrapping_add((*block).l[(78i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(c
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    c
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    d = d << 30i32 | d >> 32i32 - 30i32;
    (*block).l[(79i32 & 15i32) as usize] =
        ((*block).l[(79i32 + 13i32 &
                         15i32) as usize] ^
             (*block).l[(79i32 + 8i32 &
                             15i32) as usize] ^
             (*block).l[(79i32 + 2i32 &
                             15i32) as usize] ^
             (*block).l[(79i32 & 15i32) as usize]) <<
            1i32 |
            ((*block).l[(79i32 + 13i32 &
                             15i32) as usize] ^
                 (*block).l[(79i32 + 8i32 &
                                 15i32) as usize] ^
                 (*block).l[(79i32 + 2i32 &
                                 15i32) as usize] ^
                 (*block).l[(79i32 & 15i32) as usize])
                >> 32i32 - 1i32;
    a =
        
        (a).wrapping_add((c ^ d ^
                                             e).wrapping_add((*block).l[(79i32
                                                                             &
                                                                             15i32)
                                                                            as
                                                                            usize]).wrapping_add(0xca62c1d6u32).wrapping_add(b
                                                                                                                                    <<
                                                                                                                                    5i32
                                                                                                                                    |
                                                                                                                                    b
                                                                                                                                        >>
                                                                                                                                        32i32
                                                                                                                                            -
                                                                                                                                            5i32));
    c = c << 30i32 | c >> 32i32 - 30i32;
    let ref mut fresh0 = *state.offset(0isize);
    *fresh0 =
        
        (((*fresh0))).wrapping_add(a);
    let ref mut fresh1 = *state.offset(1isize);
    *fresh1 =
        
        (((*fresh1))).wrapping_add(b);
    let ref mut fresh2 = *state.offset(2isize);
    *fresh2 =
        
        (((*fresh2))).wrapping_add(c);
    let ref mut fresh3 = *state.offset(3isize);
    *fresh3 =
        
        (((*fresh3))).wrapping_add(d);
    let ref mut fresh4 = *state.offset(4isize);
    *fresh4 =
        
        (((*fresh4))).wrapping_add(e);
    e = 0u32;
    d = e;
    c = d;
    b = c;
    a = b;
}
/* Add padding and return the message digest. */
unsafe extern "C" fn SHA1_Final(mut context: *mut SHA1_CTX,
                                mut digest: *mut u8) {
    
    let mut finalcount: [u8; 8] = [0; 8];
     let mut i:  u32 =  0u32;
    while i < 8u32 {
        finalcount[i as usize] =
            ((*context).count[(if i >= 4u32 {
                                   0i32
                               } else { 1i32 }) as usize] >>
                 (3u32).wrapping_sub(i &
                                                     3u32).wrapping_mul(8u32)
                 & 255u32) as libc::c_uchar;
        i = i.wrapping_add(1)
        /* Endian independent */
    } /* Should cause a SHA1_Transform() */
    SHA1_Update(context,
                
                b"\x80\x00" as *const  u8 as
                    *mut u8, 1);
    while (*context).count[0usize] &
              504u32 !=
              448u32 {
        SHA1_Update(context,
                    
                    b"\x00\x00" as *const  u8 as
                        *mut u8, 1);
    }
    SHA1_Update(context, finalcount.as_mut_ptr(), 8);
    i = 0u32;
    while i < 20u32 {
        *digest.offset(i as isize) =
            ((*context).state[(i >> 2i32) as usize] >>
                 (3u32).wrapping_sub(i &
                                                     3u32).wrapping_mul(8u32)
                 & 255u32) as u8;
        i = i.wrapping_add(1)
    }
    /* Wipe variables */
    i = 0u32; /* SWR */
    memset((*context).buffer.as_mut_ptr() as *mut libc::c_void,
           0i32, 64);
    memset((*context).state.as_mut_ptr() as *mut libc::c_void,
           0i32, 20);
    memset((*context).count.as_mut_ptr() as *mut libc::c_void,
           0i32, 8);
    memset(finalcount.as_mut_ptr() as *mut libc::c_void, 0i32,
           8);
    /* make SHA1Transform overwrite its own static vars */
    SHA1_Transform((*context).state.as_mut_ptr(),
                   (*context).buffer.as_mut_ptr() as *const u8);
}
#[inline]
unsafe extern "C" fn sum(mut data: *mut libc::c_void, mut len: i32)
 -> libc::c_ulong {
    let mut sha: SHA1_CTX =
        SHA1_CTX{state: [0; 5], count: [0; 2], buffer: [0; 64],};
    let mut digest: [u8; 20] = [0; 20];
    SHA1_Init(&mut sha);
    SHA1_Update(&mut sha, data as *const u8, len as size_t);
    SHA1_Final(&mut sha, digest.as_mut_ptr());
    return ((digest[0usize] as i32) <<
                24i32 |
                (digest[1usize] as i32) <<
                    16i32 |
                (digest[2usize] as i32) <<
                    8i32 |
                digest[3usize] as i32) as
               libc::c_ulong;
}
unsafe fn main_0() -> i32 {
    let mut srct: [libc::c_uchar; 3] =
        [221u8,
         79u8,
         129u8];
    let mut outt: [libc::c_uchar; 3] = [0; 3];
    static mut src: [libc::c_uchar; 50331648] = [0; 50331648];
    static mut output: [libc::c_uchar; 50331648] = [0; 50331648];
    
    let mut j: i32 = 0;
    let mut k: i32 = 0;
    let mut l: i32 = 0i32;
    
    
    
    
    
    
    //transform = qcms_create_transform(output_profile, input_profile);
     let mut input_profile:  *mut qcms_profile =
    
        qcms_profile_from_path(b"lcms_test/input.icc\x00" as *const u8 as
                                   *const libc::c_char); let mut output_profile:  *mut qcms_profile =
    
        qcms_profile_from_path(b"lcms_test/output.icc\x00" as *const u8 as
                                   *const libc::c_char); let mut transform:  *mut qcms_transform =
    
        qcms_transform_create(input_profile, QCMS_DATA_RGB_8, output_profile,
                              QCMS_DATA_RGB_8, QCMS_INTENT_PERCEPTUAL); let mut i:  i32 =  0i32;
    while i < 256i32 {
        j = 0i32;
        while j < 256i32 {
            k = 0i32;
            while k < 256i32 {
                let fresh5 = l;
                l = l + 1;
                src[fresh5 as usize] = i as libc::c_uchar;
                let fresh6 = l;
                l = l + 1;
                src[fresh6 as usize] = j as libc::c_uchar;
                let fresh7 = l;
                l = l + 1;
                src[fresh7 as usize] = k as libc::c_uchar;
                k += 1
            }
            j += 1
        }
        i += 1
    }
    qcms_transform_data(transform, srct.as_mut_ptr() as *const libc::c_void,
                        outt.as_mut_ptr() as *mut libc::c_void,
                        1);
    qcms_transform_data(transform, src.as_mut_ptr() as *const libc::c_void,
                        output.as_mut_ptr() as *mut libc::c_void,
                        (256i32 * 256i32 *
                             256i32) as size_t);
    i = 256i32 * 40i32 * 3i32;
    while i <
              30i32 +
                  256i32 * 40i32 * 3i32 {
        printf(b"(%d %d %d) -> output (%d %d %d)\n\x00" as *const u8 as
                   *const libc::c_char, src[i as usize] as i32,
               src[(i + 1i32) as usize] as i32,
               src[(i + 2i32) as usize] as i32,
               output[i as usize] as i32,
               output[(i + 1i32) as usize] as i32,
               output[(i + 2i32) as usize] as i32);
        i += 3i32
    }
    qcms_transform_release(transform);
    qcms_profile_release(input_profile);
    qcms_profile_release(output_profile);
    if sum(output.as_mut_ptr() as *mut libc::c_void,
           256i32 * 256i32 * 256i32 *
               3i32) !=
           0xca89c51c {
        printf(b"DATA CHANGED: %lx\n\x00" as *const u8 as *const libc::c_char,
               sum(output.as_mut_ptr() as *mut libc::c_void,
                   256i32 * 256i32 *
                       256i32 * 3i32));
        abort();
    }
    return 0i32;
}

pub fn main() { unsafe { ::std::process::exit(main_0()) } }
